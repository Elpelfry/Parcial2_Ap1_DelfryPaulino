@page "/Index"
@inject HttpClient httpClient

<PageTitle>Vehiculos Home</PageTitle>

<div class="card shadow">
    <div class="card-header bg-primary d-flex align-items-center justify-content-center">
        <h1 class="text-light fw-bold">Vehiculos</h1>
    </div>
    <div class="card-body">
        <div class="row filter-input ">
            <label class="fw-bold">Buscar por:</label>
            <div class="col col-2">
                <InputSelect @bind-Value="Opcion" class="form-select">
                    <option value="1">Id</option>
                    <option value="2">Descripcion</option>
                    <option value="3">Costo</option>
                </InputSelect>
            </div>
            
            <div class="col-auto">
                @switch (Opcion)
                {
                    case 1:
                        <div class="input-group">
                            <InputNumber @bind-Value="vehiculo.VehiculoId" class="form-control" min="0"></InputNumber>
                            <button type="button" class="btn btn-primary bi bi-search" @onclick="Buscar"></button>
                        </div>
                        break;
                    case 2:
                        <div class="input-group">
                            <InputText @bind-Value="vehiculo.Descripción" class="form-control"></InputText>
                            <button type="button" class="btn btn-primary bi bi-search" @onclick="Buscar"></button>
                        </div>
                        break;
                    case 3:
                        <div class="input-group">
                            <InputNumber @bind-Value="vehiculo.Costo" class="form-control"></InputNumber>
                            <button type="button" class="btn btn-primary bi bi-search" @onclick="Buscar"></button>
                        </div>
                        break;
                }
            </div>
            <div class="col text-end">
                <div class="col-auto">
                    <a href="/Create" class="btn btn-success bi bi-file-earmark-diff-fill">Crear</a>
                </div>
            </div>
        </div>
    </div>
    <div>
        <table class="table table-light table-hover table-striped table-bordered ">
            <thead>
                <tr>
                    <th scope="col" class="text-center">Id</th>
                    <th scope="col" class="text-center">Descripcion</th>
                    <th scope="col" class="text-center">Costo</th>
                    <th scope="col" class="text-center">Editar</th>
                    <th scope="col" class="text-center">Ver</th>
                    <th scope="col" class="text-center">Eliminar</th>

                    

                </tr>
            </thead>
            <tbody>
                @foreach (var item in ListaVehiculos)
                {
                    <tr>
                        <td class="text-center">@item.VehiculoId</td>
                        <td class="text-center">@item.Descripción</td>
                        <td class="text-center">@item.Costo.ToString("N2")</td>

                        <td class="text-center">
                            <a href="Edit/@item.VehiculoId" class="btn btn-primary bi bi-pencil-square"></a>
                        </td>
                        <td class="text-center">
                            <a href="View/@item.VehiculoId" class="btn btn-info bi bi-card-text"></a>
                        </td>
                        <td class="text-center">
                            <a href="Delete/@item.VehiculoId" class="btn btn-danger bi bi-trash-fill"></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="card-footer fw-bold">
            <p>Cantidad de Tickets: @ListaVehiculos.Count</p>
        </div>
    </div>
</div>

@code {

    public List<Vehiculos> ListaVehiculos = new List<Vehiculos>();
    public Vehiculos vehiculo = new Vehiculos();
    public int Opcion { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ListaVehiculos = (await httpClient.GetFromJsonAsync<List<Vehiculos>>("api/Vehiculos"))!;
    }
    public async Task Buscar()
    {
        if (Opcion == 1 && vehiculo.VehiculoId > 0)
            ListaVehiculos = (await httpClient.GetFromJsonAsync<List<Vehiculos>>("api/Vehiculos"))!.Where(v => v.VehiculoId == vehiculo.VehiculoId).ToList();

        else if (Opcion == 2 && !string.IsNullOrEmpty(vehiculo.Descripción))
            ListaVehiculos = (await httpClient.GetFromJsonAsync<List<Vehiculos>>("api/Vehiculos"))!.Where(v => v.Descripción!.ToLower().Contains(vehiculo.Descripción!.ToLower())).ToList();
        else if (Opcion == 3 && vehiculo.Costo > 0)
            ListaVehiculos = (await httpClient.GetFromJsonAsync<List<Vehiculos>>("api/Vehiculos"))!.Where(v => v.Costo == vehiculo.Costo).ToList();
        else
            ListaVehiculos = (await httpClient.GetFromJsonAsync<List<Vehiculos>>("api/Vehiculos"))!;
    }
}